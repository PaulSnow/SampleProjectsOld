<decision_tables>
<decision_table>
<table_name>FS_GC_Build_Household</table_name>
<xls_file>1010_250 FS GC Build Household.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_CG_Excluded_Individuals_001, GC_CG_Required_Adults_001, GC_LivingArrng_001</IPAD_ID>
<PURPOSE>Build the food stamp household certified group.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A232</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number>1</condition_number>
<condition_comment>Individual notice reason is blank</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>inFSGroup</condition_description>
<condition_postfix>inFSGroup
</condition_postfix>
<condition_column column_value="n" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number>2</condition_number>
<condition_comment>Individual is applicant</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual is applicant</condition_description>
<condition_postfix>applicant
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual age is &lt; 18</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>age/12.0 &lt; 18</condition_description>
<condition_postfix>age 12.0 div 18 &lt;
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is under parental control</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>underParentalControl</condition_description>
<condition_postfix>underParentalControl
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as ineligible</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = &apos;X&apos;</action_description>
<action_postfix>/eligibilityGroupIndicator &apos;X&apos; def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = responsible adult must apply</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0013&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0013&apos; def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Include individual in certified group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = &apos;C&apos;</action_description>
<action_postfix>/eligibilityGroupIndicator &apos;C&apos; def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Build Certified Group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Build Certified Group</action_description>
<action_postfix>&apos;FS GC Build Certified Group&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 5</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 5</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Setup_7</table_name>
<xls_file>1010_070 FS GC Setup 7.xls</xls_file>
<attribute_fields>
<IPAD_ID></IPAD_ID>
<PURPOSE>Determines the order in which the FS GC tables are to be performed.</PURPOSE>
<COMMENTS>Perform for each EDG/CG.</COMMENTS>
<POLICY_REFERENCE></POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Perform when called</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Perform when called</condition_description>
<condition_postfix>true
</condition_postfix>
<condition_column column_value="*" column_number="1"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number>4</action_number>
<action_comment>Perform FS GC Determine Migrant Household</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Determine Migrant Household for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Determine Migrant Household&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Determine Homeless Household</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Determine Homeless Household for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Determine Homeless Household&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>6</action_number>
<action_comment>Perform FS GC Determine Resource Income Needs Groups</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Determine Resource Income Needs Groups for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Determine Resource Income Needs Groups&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Alien Sponsor</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Alien Sponsor for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Alien Sponsor&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Determine Considerations of Alien Sponsor</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Determine Considerations of Alien Sponsor for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Determine Considerations of Alien Sponsor&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>9</action_number>
<action_comment>Perform FS GC Exclude Dead Individuals</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Exclude Dead Individuals for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Exclude Dead Individuals&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>10</action_number>
<action_comment>Perform FS GC Exclude Inactive Individuals</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Exclude Inactive Individuals for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Exclude Inactive Individuals&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>11</action_number>
<action_comment>Perform FS GC Set Individual Participation Status Codes</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Set Individual Participation Status Codes for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Set Individual Participation Status Codes&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Check for Drug And Alcohol Group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Check for Drug And Alcohol Group  for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Check for Drug And Alcohol Group&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>13</action_number>
<action_comment>Perform FS GC Deny Group For Not Converted</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>[dummy] // Tiers00169075 Perform FS GC Deny Group For Not Converted</action_description>
<action_postfix> 
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>14</action_number>
<action_comment>Perform FS GC Deny Group For Voluntary Withdrawal</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Deny Group For Voluntary Withdrawal</action_description>
<action_postfix>&apos;FS GC Deny Group For Voluntary Withdrawal&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>15</action_number>
<action_comment>Exit ot FS GC Setup 6</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit ot FS GC Setup 6</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Student_Status</table_name>
<xls_file>1010_110 FS GC Student Status.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_CG_Excluded_Individuals_001</IPAD_ID>
<PURPOSE>Determine whether the food stamp individual meets the food stamp student requirement.</PURPOSE>
<COMMENTS>* as defined by the institution</COMMENTS>
<POLICY_REFERENCE>A232, B480</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual&apos;s age is &lt; 18</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>age/12  &lt; 18</condition_description>
<condition_postfix>age 12 div 18 &lt;
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual&apos;s age is &gt; 49</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>age/12  &gt; 49</condition_description>
<condition_postfix>age 12 div 49 &gt;
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is half-time or full-time student *</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>schoolEnrollmentCode = &apos;HT&apos;, &apos;FT&apos;</condition_description>
<condition_postfix>schoolEnrollmentCode &apos;HT&apos; == schoolEnrollmentCode &apos;FT&apos; == || 
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is enrolled at an institution offering higher education (negate = secondary school, elementary school) //removed &apos;TC&apos; as per defect 241137</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>schoolTypeCode = &apos;CC&apos;, &apos;CL&apos;, &apos;JC&apos;, &apos;HS&apos;, &apos;UN&apos;</condition_description>
<condition_postfix>schoolTypeCode &apos;CC&apos; == schoolTypeCode &apos;CL&apos; == || schoolTypeCode &apos;JC&apos; == || schoolTypeCode &apos;HS&apos; == || schoolTypeCode &apos;UN&apos; == || 
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>High school diploma is required for individual&apos;s course of study</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>schoolDiplomaRequiredSw</condition_description>
<condition_postfix>schoolDiplomaRequiredSw
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Eligible College Student</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Eligible College Student</action_description>
<action_postfix>&apos;FS GC Eligible College Student&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Disqualified Ineligible</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Disqualified Ineligible</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Setup_5</table_name>
<xls_file>1010_050 FS GC Setup 5.xls</xls_file>
<attribute_fields>
<IPAD_ID></IPAD_ID>
<PURPOSE>Determines the order in which the FS GC tables are to be performed.</PURPOSE>
<COMMENTS>**  Perform for all individuals on the application with notice reasons = spaces.</COMMENTS>
<POLICY_REFERENCE></POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Certified Group formed</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>cgFormed</condition_description>
<condition_postfix>cgFormed
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Build Household</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Build Household for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Build Household&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Additional Household Members</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Additional Household Members for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Additional Household Members&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Setup 6</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Setup 6</action_description>
<action_postfix>&apos;FS GC Setup 6&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 4</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 4</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Setup_2</table_name>
<xls_file>1010_020 FS GC Setup 2.xls</xls_file>
<attribute_fields>
<IPAD_ID></IPAD_ID>
<PURPOSE>Determines the order in which the FS Group Composition tables should be performed.</PURPOSE>
<COMMENTS>** Perform for all individuals on the application with notice reason = spaces.   *** Perform only if certified group formed.</COMMENTS>
<POLICY_REFERENCE></POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Perform when called</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Perform when called</condition_description>
<condition_postfix>true
</condition_postfix>
<condition_column column_value="*" column_number="1"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number>14</action_number>
<action_comment>Perform FS GC Elderly Disabled</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Elderly Disabled for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Elderly Disabled&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>15</action_number>
<action_comment>Perform FS GC Treatment Center</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Treatment Center  for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Treatment Center&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Additional Household Members</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Additional Household Members for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Additional Household Members&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Setup 3</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Setup 3</action_description>
<action_postfix>&apos;FS GC Setup 3&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit FS GC Setup</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit FS GC Setup</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Alien_Sponsor_Spouse_Tax_dependent_Exclusion</table_name>
<xls_file>1010_390 FS GC Alien Sponsor, Spouse, Tax dependent Exclusion.xls</xls_file>
<attribute_fields>
<IPAD_ID>NF_Alien_Sponsor_001</IPAD_ID>
<PURPOSE>Determine if the alien sponsor is married and exclude the alien sponsor, alien sponsor tax dependent and if the alien sponsor is married, exclude the spouse and the spouses tax dependents.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A1360, A1245</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Alien sponsor is married</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>married = true and Individual has a spouse</condition_description>
<condition_postfix>married true == false { individual dictpush inverserelationship dictpush relationshipcd spouse == || dictpop dictpop } individual.relationships foreach &amp;&amp;
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Identify the alien sponsor spouse</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set the_spouse = spouse&apos;s individual</action_description>
<action_postfix>/the_spouse spouse &gt;&gt; individual dictpop dictpop def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exclude alien sponsor  from the EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>find individual in the edg_group and set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>individual edg_group dictpush { individual over == { individual dictpush /eligibilityGroupIndicator Excluded def dictpop } swap if } edg_individuals foreach pop dictpop
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number>11</action_number>
<action_comment>Exclude all alien sponsor tax dependents from the EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>find all persons whose taxDependentSw = true and find individual in the edg_group and set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>{ individual dictpush inverserelationship dictpush { edg_group dictpush individual { { /eligibilityGroupIndicator Excluded def } over individual == if } edg_individuals foreach pop dictpop } taxDependentSw true == if dictpop dictpop } relationships foreach 
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number>10</action_number>
<action_comment>Exclude alien sponsor spouse from the EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>using the_spouse find individual in the edg_group and set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>the_spouse dictpush individual edg_group dictpush { individual over == { individual dictpush /eligibilityGroupIndicator Excluded def dictpop } swap if } edg_individuals foreach pop dictpop dictpop
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>12</action_number>
<action_comment>Exclude all alien sponsor spouse&apos;s tax dependents from the EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_spouse find all persons whose taxDependentSw = true and find individual in the edg_group and set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>the_spouse dictpush { individual dictpush inverserelationship dictpush { edg_group dictpush individual { { /eligibilityGroupIndicator Excluded def } over individual == if } edg_individuals foreach pop dictpop } taxDependentSw true == if dictpop dictpop } relationships foreach  dictpop
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Alien Sponsor</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Alien Sponsor</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Roomer_Boarder_Attendant</table_name>
<xls_file>1010_210 FS GC Roomer Boarder Attendant.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_Boarder_Status_001, GC_CG_Excluded_Individuals_001, GC_LivingArrng_001, GC_CG_Excluded_Adults_001</IPAD_ID>
<PURPOSE>Determine if roomer, boarder, or attendant should be included in certified group.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A210, A232, B410</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual claims attendant status</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>houseGuestType = Attendent</condition_description>
<condition_postfix>houseGuestType Attendent ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual claims roomer status</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>houseGuestType = Roomer</condition_description>
<condition_postfix>houseGuestType Roomer ==
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual claims boarder status</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>houseGuestType = Boarder</condition_description>
<condition_postfix>houseGuestType Boarder ==
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual averages &gt; 2 meals a day where they board</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>mealsPerDay &gt; 2</condition_description>
<condition_postfix>mealsPerDay 2 &gt;
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual pays full allotment amount</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>paysFullAllotmentAmt</condition_description>
<condition_postfix>paysFullAllotmentAmt
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual pays 2/3 full allotment</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>paysTwoThirdAllotmentAmt</condition_description>
<condition_postfix>paysTwoThirdAllotmentAmt
</condition_postfix>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Applicant wants to include individual</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>appliedForFS</condition_description>
<condition_postfix>appliedForFS
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individuals purchase and prepare together</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>purchaseAndPrepareTogether</condition_description>
<condition_postfix>purchaseAndPrepareTogether
</condition_postfix>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="y" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as ineligible</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>/eligibilityGroupIndicator Excluded def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="12"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = individual is an attendent</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0007&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0007&apos; def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = individual is a roomer</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0008&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0008&apos; def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number>15</action_number>
<action_comment>Include individual in certified group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = InCG</action_description>
<action_postfix>/eligibilityGroupIndicator InCG def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="11"></action_column></action_details>
<action_details>
<action_number>16</action_number>
<action_comment>Set notice reason = individual is a ineligible boarder</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0009&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0009&apos; def
</action_postfix>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="8"></action_column></action_details>
<action_details>
<action_number>17</action_number>
<action_comment>Set notice reason = Individual does not purchase and prepare together</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0005&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0005&apos; def
</action_postfix>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="12"></action_column></action_details>
<action_details>
<action_number>18</action_number>
<action_comment>Exclude individual from the EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>/eligibilityGroupIndicator Excluded def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="12"></action_column></action_details>
<action_details>
<action_number>21</action_number>
<action_comment>Exit to FS GC Additional Household Members, FS GC Build Certified Group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Additional Household Members, FS GC Build Certified Group</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="11"></action_column>
<action_column column_value="X" column_number="12"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Build_Certified_Group</table_name>
<xls_file>1010_170 FS GC Build Certified Group.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_LivingArrng_001, GC_CG_Required_Children_001, GC_CG_Required_Adults_001</IPAD_ID>
<PURPOSE>Determine the core food stamp certified group based on applicant, spouse, and their children.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A210, A231, A232</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is spouse of applicant</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual has a spouse who is the applicant</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { applicant || } relationshipcd spouse == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column>
<condition_column column_value="n" column_number="15"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is child of applicant</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual has a parent who is the applicant</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { applicant || } relationshipcd parent == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column>
<condition_column column_value="n" column_number="15"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is child of applicant&apos;s spouse</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual has a parent who has a spouse who is the applicant</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { { individual dictpush inverserelationship dictpush { applicant || } relationshipcd spouse == if dictpop dictpop } individual.relationships foreach  } relationshipcd parent == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="y" column_number="11"></condition_column>
<condition_column column_value="y" column_number="12"></condition_column>
<condition_column column_value="y" column_number="13"></condition_column>
<condition_column column_value="y" column_number="14"></condition_column>
<condition_column column_value="n" column_number="15"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Child&apos;s age is &lt; 22</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>age/12.0  &lt; 22</condition_description>
<condition_postfix>age 12.0 div 22 &lt;
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is identified as ineligible student</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>noticeReason = &apos;EL0012&apos;</condition_description>
<condition_postfix>noticeReason &apos;EL0012&apos; ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="y" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual purchases and prepares with applicant</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>purchaseAndPrepareTogether</condition_description>
<condition_postfix>purchaseAndPrepareTogether
</condition_postfix>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="y" column_number="12"></condition_column>
<condition_column column_value="y" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual claims boarder status</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>houseGuestType = Boarder</condition_description>
<condition_postfix>houseGuestType Boarder ==
</condition_postfix>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="y" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Include individual in certified group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = &apos;C&apos; ;; Set cgFormed = true</action_description>
<action_postfix>/eligibilityGroupIndicator &apos;C&apos; def /cgFormed true def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="13"></action_column></action_details>
<action_details>
<action_number>10</action_number>
<action_comment>Exclude individual from eligibility determination group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = &apos;X&apos;</action_description>
<action_postfix>/eligibilityGroupIndicator &apos;X&apos; def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="11"></action_column>
<action_column column_value="X" column_number="14"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = individuals do not purchase and prepare together</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0005&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0005&apos; def
</action_postfix>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="14"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Other Household Members</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Other Household Members</action_description>
<action_postfix>&apos;FS GC Other Household Members&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="15"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Roomer Boarder Attendant</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Roomer Boarder Attendant</action_description>
<action_postfix>&apos;FS GC Roomer Boarder Attendant&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="12"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Treatment Center, FS GC Battered Spouse Shelter, FS GC Build Household</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Treatment Center, FS GC Battered Spouse Shelter, FS GC Build Household</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="11"></action_column>
<action_column column_value="X" column_number="12"></action_column>
<action_column column_value="X" column_number="13"></action_column>
<action_column column_value="X" column_number="14"></action_column>
<action_column column_value="X" column_number="15"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Disqualified_Ineligible</table_name>
<xls_file>1010_100 FS GC Disqualified Ineligible.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_CG_Excluded_Adults_001, GC_CG_Excluded_Individuals_001, NF_Alien_Sponsor_001, NF_Alien_Eligibility_001</IPAD_ID>
<PURPOSE>Determine if the individual has a current intentional program violation disqualification for the determination month.  Also identify citizenship, alien status, and alien sponsor.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A232, B461</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual has intentional program violation (IPV) disqualification for eligibility determination month</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>IPV</condition_description>
<condition_postfix>IPV
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is a adult</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>adult</condition_description>
<condition_postfix>adult
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as ineligible</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = InEDG</action_description>
<action_postfix>/eligibilityGroupIndicator InEDG def
</action_postfix></action_details>
<action_details>
<action_number>10</action_number>
<action_comment>Identify individual as disqualified Adult for IPV</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set  partStatusCode = &apos;DA&apos;</action_description>
<action_postfix>/partStatusCode &apos;DA&apos; def
</action_postfix></action_details>
<action_details>
<action_number>11</action_number>
<action_comment>Identify individual as disqualified Childfor IPV</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set  partStatusCode = &apos;DC&apos;</action_description>
<action_postfix>/partStatusCode &apos;DC&apos; def
</action_postfix></action_details>
<action_details>
<action_number>12</action_number>
<action_comment>Set notice reason = individual has an IPV disqualification for eligibility determination month</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = ipvDisqualification  ;; Set inFSGroup = false</action_description>
<action_postfix>/noticeReason ipvDisqualification def /inFSGroup false def
</action_postfix></action_details>
<action_details>
<action_number>13</action_number>
<action_comment>Consider individual&apos;s resources</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set considerRsc = true</action_description>
<action_postfix>/considerRsc true def
</action_postfix></action_details>
<action_details>
<action_number></action_number>
<action_comment>Consider individual&apos;s income</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set considerIncome = true</action_description>
<action_postfix>/considerIncome true def
</action_postfix></action_details>
<action_details>
<action_number></action_number>
<action_comment>Consider individual&apos;s needs</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set considerNeeds = true</action_description>
<action_postfix>/considerNeeds true def
</action_postfix></action_details>
<action_details>
<action_number>16</action_number>
<action_comment>Perform FS GC Student Status</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Student Status</action_description>
<action_postfix>&apos;FS GC Student Status&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Setup_3</table_name>
<xls_file>1010_030 FS GC Setup 3.xls</xls_file>
<attribute_fields>
<IPAD_ID></IPAD_ID>
<PURPOSE>Determines the order in which the FS GC tables are to be performed.</PURPOSE>
<COMMENTS>**  Perform for all individuals on the application with notice reason = spaces.</COMMENTS>
<POLICY_REFERENCE></POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Certified Group Formed</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Is there a edg_individual in the edg_group whose eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>false { eligibilityGroupIndicator InCG == || } edg_group.edg_individuals foreach
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Setup 6</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Setup 6</action_description>
<action_postfix>&apos;FS GC Setup 6&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Group Living Arrangement</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Group Living Arrangement for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Group Living Arrangement&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Additional Household Members</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Additional Household Members for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Additional Household Members&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Setup 4</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Setup 4</action_description>
<action_postfix>&apos;FS GC Setup 4&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 2</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 2</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Deny_Group_For_Not_Converted</table_name>
<xls_file>1010_414 FS GC Deny Group For Not Converted.xls</xls_file>
<attribute_fields>
<IPAD_ID></IPAD_ID>
<PURPOSE>Determine the edm to be denied if edm is prior to conversion month</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE></POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Case is Converted</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>caseConverted = true</condition_description>
<condition_postfix>caseConverted true ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Type of assistance = Food Stamps</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>programCd = &apos;FS&apos;</condition_description>
<condition_postfix>programCd &apos;FS&apos; ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Case is converted for Texas Works Programs</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>twInd = &apos;C&apos;</condition_description>
<condition_postfix>twInd &apos;C&apos; ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>EDM prior to conversion month</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>fsCvDt != null and (in months edm &lt; fsCvDt)</condition_description>
<condition_postfix>fsCvDt null != setmonth edm fsCvDt &lt; setday  &amp;&amp;
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Deny Group For Program not Converted and Set notice reason = Group not certified as edm is prior to conversion month</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set groupNoticeReason = &apos;EL0124&apos;</action_description>
<action_postfix>/groupNoticeReason &apos;EL0124&apos; def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Fail all edg Individual</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded , set partStatusCode = NULL for all the edg_individuals in the edg_group;; Perform FS GC Set Individual Participation Status Codes for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ /eligibilityGroupIndicator Excluded def /partStatusCode NULL def } edg_group.edg_individuals foreach { individual dictpush &apos;FS GC Set Individual Participation Status Codes&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Exclude Conversion Individuals for each edg_individual and individual in the edg_group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Exclude Conversion Individuals for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Exclude Conversion Individuals&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 7</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 7</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Setup_6</table_name>
<xls_file>1010_060 FS GC Setup 6.xls</xls_file>
<attribute_fields>
<IPAD_ID></IPAD_ID>
<PURPOSE>Determines the order in which the FS GC tables are to be performed.</PURPOSE>
<COMMENTS>**  Perform for all individuals in the certified group.</COMMENTS>
<POLICY_REFERENCE></POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Certified Group formed</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Is there a edg_individual in the edg_group whose eligibilityGroupIndicator = &apos;C&apos;</condition_description>
<condition_postfix>false { eligibilityGroupIndicator &apos;C&apos; == || } edg_group.edg_individuals foreach
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>165% Income Test = failed</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>failedIncomeTest = true</condition_description>
<condition_postfix>failedIncomeTest true ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Determine Potential Elderly Disabled Separate Group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Determine Potential Elderly Disabled Separate Group for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Determine Potential Elderly Disabled Separate Group&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Setup 7</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Setup 7 for all edg_groups in the case</action_description>
<action_postfix>{ &apos;FS GC Setup 7&apos; performtable } case.edg_groups foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup3, FS GC Setup4, FS GC Setup 5</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup3, FS GC Setup4, FS GC Setup 5</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Determine_Disability</table_name>
<xls_file>1010_140 FS GC Determine Disablity.xls</xls_file>
<attribute_fields>
<IPAD_ID>None</IPAD_ID>
<PURPOSE>Determine if the individual is elderly and disabled.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A-231</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Perform when called</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Perform when called</condition_description>
<condition_postfix>true
</condition_postfix>
<condition_column column_value="*" column_number="1"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Perform TW NF Disabled Blind</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform TW NF Disabled Blind</action_description>
<action_postfix>&apos;TW NF Disabled Blind&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 2</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 2</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Determine_Migrant_Household</table_name>
<xls_file>1010_260 FS GC Determine Migrant Household.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_ExpeditedFS_Farmworker_001, GC_MigrantHH_001</IPAD_ID>
<PURPOSE>Determine if an individual is a seasonal farm worker, a migrant in the work stream, or a migrant not in the work stream.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A146, B440</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number>1</condition_number>
<condition_comment>Individual is in certified group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>eligibilityGroupIndicator InCG ==
</condition_postfix>
<condition_column column_value="n" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number>2</condition_number>
<condition_comment>Individual is seasonal farm worker</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>seasonalFarmWorker</condition_description>
<condition_postfix>seasonalFarmWorker
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is migrant not in the work stream</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>migrant and inWorkStream = false</condition_description>
<condition_postfix>migrant inWorkStream false == &amp;&amp;
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is migrant in the work stream</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>migrant and inWorkStream = true</condition_description>
<condition_postfix>migrant inWorkStream true == &amp;&amp;
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Identify group as migrant household</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set migrantHouseholdSw = true</action_description>
<action_postfix>/migrantHouseholdSw true def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number>13</action_number>
<action_comment>Identify group as migrant farmworker and individual as farmworker</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set migrantReasonTypeCd = farmWorker ;; Set indvMigrantReasonCd = farmWorker</action_description>
<action_postfix>/migrantReasonTypeCd farmWorker def /indvMigrantReasonCd farmWorker def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number>14</action_number>
<action_comment>Identify group as migrant InWorkstream and individual as migrant InWorkstream</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set migrantReasonTypeCd = migrantInWS ;; Set indvMigrantReasonCd = migrantInWS</action_description>
<action_postfix>/migrantReasonTypeCd migrantInWS def /indvMigrantReasonCd migrantInWS def
</action_postfix>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number>15</action_number>
<action_comment>Identify group as migrant Out of Workstream and individual as migrant Out of Workstream</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set migrantReasonTypeCd = migrantOutWS ;; Set indvMigrantReasonCd = migrantOutWS</action_description>
<action_postfix>/migrantReasonTypeCd migrantOutWS def /indvMigrantReasonCd migrantOutWS def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number>16</action_number>
<action_comment>Exit to FS GC Setup 6</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 6</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Exclude_Individual_Not_in_Group</table_name>
<xls_file>1010_080 FS GC Exclude Individual Not in Group.xls</xls_file>
<attribute_fields>
<IPAD_ID>None</IPAD_ID>
<PURPOSE>Identify and exclude individuals who are listed on the application but are currently not a part of the group.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A232</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is currently part of the group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>partOfGroup</condition_description>
<condition_postfix>partOfGroup
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is applicant</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual is applicant</condition_description>
<condition_postfix>applicant
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual has a spouse whose applicant</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual has a spouse whose applicant</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { applicant || } relationshipcd spouse == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is in group &gt; 0 days</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>withGroup</condition_description>
<condition_postfix>withGroup
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number>12</action_number>
<action_comment>Identify individual as target for the EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set targetSw = true</action_description>
<action_postfix>/targetSw true def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>13</action_number>
<action_comment>Identify individual is not target for the EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set targetSw = false</action_description>
<action_postfix>/targetSw false def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number>14</action_number>
<action_comment>Identify Individual as ineligible</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>/eligibilityGroupIndicator Excluded def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set noticeReason = individual not in group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0001&apos; ;; Set inFSGroup = false</action_description>
<action_postfix>/noticeReason &apos;EL0001&apos; def /inFSGroup false def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exclude Individual from EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>/eligibilityGroupIndicator Excluded def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Determine_Resource_Income_Needs_Groups</table_name>
<xls_file>1010_350 FS GC Determine Resource Income Needs Groups and the EDG.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_TW_EDG_001</IPAD_ID>
<PURPOSE>Determine the members of the certified group and identify whose resources, income, and needs should be considered.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A210</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is in certified group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>eligibilityGroupIndicator = &apos;C&apos;</condition_description>
<condition_postfix>eligibilityGroupIndicator &apos;C&apos; ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is identified as ineligible student</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>noticeReason = &apos;EL0012&apos;</condition_description>
<condition_postfix>noticeReason &apos;EL0012&apos; ==
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is identified as a test adult or test child</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>partStatusCode = &apos;ta&apos;, &apos;tc&apos;</condition_description>
<condition_postfix>partStatusCode &apos;ta&apos; == partStatusCode &apos;tc&apos; == || 
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number>9</action_number>
<action_comment>Consider individual&apos;s resources</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set considerRsc = true</action_description>
<action_postfix>/considerRsc true def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Consider individual&apos;s income</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set considerIncome = true</action_description>
<action_postfix>/considerIncome true def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Consider individual&apos;s needs</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set considerNeeds = true</action_description>
<action_postfix>/considerNeeds true def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Include individual in EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = &apos;E&apos;</action_description>
<action_postfix>/eligibilityGroupIndicator &apos;E&apos; def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 7</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 7</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Additional_Household_Members</table_name>
<xls_file>1010_200 FS GC Additional Household Members.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_LivingArrng_001, GC_CG_Required_Adults_001, GC_CG_Excluded_Individuals_001</IPAD_ID>
<PURPOSE>Determine additional mandatory household members based on their relationship to the identified core group.</PURPOSE>
<COMMENTS>Perform until column 7 is reached for all individuals not in the certified group.</COMMENTS>
<POLICY_REFERENCE>A210, A232</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number>1</condition_number>
<condition_comment>Individual notice reason is blank</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>inFSGroup</condition_description>
<condition_postfix>inFSGroup
</condition_postfix>
<condition_column column_value="n" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column></condition_details>
<condition_details>
<condition_number>1</condition_number>
<condition_comment>Certified Group formed</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Is there a edg_individual in the edg_group whose eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>false { eligibilityGroupIndicator InCG == || } edg_group.edg_individuals foreach
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column></condition_details>
<condition_details>
<condition_number>2</condition_number>
<condition_comment>Individual is included in certified group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>eligibilityGroupIndicator InCG ==
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual has spouse included in certified group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual has a spouse whose edg_individual within the edg_group has eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { false individual.individual { { swap eligibilityGroupIndicator InCG == || swap } over individual == if } edg_group.edg_individuals foreach pop || } relationshipcd spouse == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual has child &lt; 22 included in certified group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual has a child whose edg_individual within the edg_group has age/12.0 &lt; 22 and eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { false individual.individual { { swap age 12.0 div 22 &lt; eligibilityGroupIndicator InCG == &amp;&amp; || swap } over individual == if } edg_group.edg_individuals foreach pop || } relationshipcd child == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual has parent included in certified group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>individual has a parent whose edg_individual within the edg_group has  eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { false individual.individual { { swap eligibilityGroupIndicator InCG == || swap } over individual == if } edg_group.edg_individuals foreach pop || } relationshipcd parent == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual&apos;s age &lt; 22</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>age/12.0 &lt; 22</condition_description>
<condition_postfix>age 12.0 div 22 &lt;
</condition_postfix>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Include individual in certified group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = &apos;C&apos; ;; Set cgFormed = true</action_description>
<action_postfix>/eligibilityGroupIndicator &apos;C&apos; def /cgFormed true def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Roomer Boarder Attendant</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Roomer Boarder Attendant</action_description>
<action_postfix>&apos;FS GC Roomer Boarder Attendant&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 2, FS GC Setup 3, FS GC Setup 4, FS GC Setup 5</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 2, FS GC Setup 3, FS GC Setup 4, FS GC Setup 5</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Exclude_Dead_Individuals</table_name>
<xls_file>1010_400 FS GC Exclude Dead Individuals.xls</xls_file>
<attribute_fields>
<IPAD_ID></IPAD_ID>
<PURPOSE>Determine the edm from which the dead individual has to be excluded from the eligibility determination group.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE></POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is deceased</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>deceasedSw = true</condition_description>
<condition_postfix>deceasedSw true ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual&apos;s deceased date is in the Eligibility Determination Month</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>In months dateOfDeath = edm</condition_description>
<condition_postfix>setmonth dateOfDeath edm == setday 
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Eligibility Determination Month is 1 month after individual&apos;s deceased date</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>In months edm &gt;= (dateOfDeath + 1 month)</condition_description>
<condition_postfix>setmonth edm dateOfDeath 1 months + &gt;= setday 
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Exclude individual from the eligibility determination group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>/eligibilityGroupIndicator Excluded def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = Individual not certified due to death</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0037&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0037&apos; def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 7</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 7</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Include_Alien_Sponsor_Spouse_Tax_Dependents</table_name>
<xls_file>1010_370 FS GC Include Alien Sponsor, Spouse and Tax Dependents.xls</xls_file>
<attribute_fields>
<IPAD_ID>NF_Alien_Sponsor_001</IPAD_ID>
<PURPOSE>Determine if the alien sponsor is included in the Food Stamp Eligibility Determination Group (EDG)</PURPOSE>
<COMMENTS>Perform for all documented aliens where category of assistance is Food Stamps.</COMMENTS>
<POLICY_REFERENCE>A1360, A1245</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Alien sponsor is married</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>married = true and Individual has a spouse</condition_description>
<condition_postfix>married true == false { individual dictpush inverserelationship dictpush relationshipcd spouse == || dictpop dictpop } individual.relationships foreach &amp;&amp;
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number>3</action_number>
<action_comment>Identify the alien sponsor spouse</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set the_spouse = spouse&apos;s individual</action_description>
<action_postfix>/the_spouse spouse &gt;&gt; individual dictpop dictpop def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>4</action_number>
<action_comment>Include alien sponsor spouse in the EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>using the_spouse find individual in the edg_group and set eligibilityGroupIndicator = InEDG</action_description>
<action_postfix>the_spouse dictpush individual edg_group dictpush { individual over == { individual dictpush /eligibilityGroupIndicator InEDG def dictpop } swap if } edg_individuals foreach pop dictpop dictpop
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>5</action_number>
<action_comment>Include all alien sponsor tax dependents in the EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>find all persons whose taxDependentSw = true and find individual in the edg_group and set eligibilityGroupIndicator = InEDG</action_description>
<action_postfix>{ individual dictpush inverserelationship dictpush { edg_group dictpush individual { { /eligibilityGroupIndicator InEDG def } over individual == if } edg_individuals foreach pop dictpop } taxDependentSw true == if dictpop dictpop } relationships foreach 
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number>6</action_number>
<action_comment>Include all alien sponsor spouse&apos;s tax dependents in the EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_spouse find all persons whose taxDependentSw = true and find individual in the edg_group and set eligibilityGroupIndicator = InEDG</action_description>
<action_postfix>the_spouse dictpush { individual dictpush inverserelationship dictpush { edg_group dictpush individual { { /eligibilityGroupIndicator InEDG def } over individual == if } edg_individuals foreach pop dictpop } taxDependentSw true == if dictpop dictpop } relationships foreach  dictpop
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>7</action_number>
<action_comment>Identify individual as alien sponsor tax dependent</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>find all persons whose taxDependentSw = true and find individual in the edg_group and set partStatusCode = alienSpnsrTD</action_description>
<action_postfix>{ individual dictpush inverserelationship dictpush { edg_group dictpush individual { { /partStatusCode alienSpnsrTD def } over individual == if } edg_individuals foreach pop dictpop } taxDependentSw true == if dictpop dictpop } relationships foreach 
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number>8</action_number>
<action_comment>Identify individual as alien sponsor spouse</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>using the_spouse find individual in the edg_group and set partStatusCode = alienSpnsrSpouse</action_description>
<action_postfix>the_spouse dictpush individual edg_group dictpush { individual over == { individual dictpush /partStatusCode alienSpnsrSpouse def dictpop } swap if } edg_individuals foreach pop dictpop dictpop
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>8</action_number>
<action_comment>Set the alien sponsor spouse inclusion reason</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>using the_spouse find individual in the edg_group and set inclusionReason = &apos;PAS&apos;</action_description>
<action_postfix>the_spouse dictpush individual edg_group dictpush { individual over == { individual dictpush /inclusionReason &apos;PAS&apos; def dictpop } swap if } edg_individuals foreach pop dictpop dictpop
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>9</action_number>
<action_comment>Identify individual as alien sponsor spouse tax dependent</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_spouse find all persons whose taxDependentSw = true and find individual in the edg_group and set partStatusCode = alienSpnsrTD</action_description>
<action_postfix>the_spouse dictpush { individual dictpush inverserelationship dictpush { edg_group dictpush individual { { /partStatusCode alienSpnsrTD def } over individual == if } edg_individuals foreach pop dictpop } taxDependentSw true == if dictpop dictpop } relationships foreach  dictpop
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>10</action_number>
<action_comment>Exit to FS GC Alien Sponsor</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Alien Sponsor</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Shelter_for_Battered_Women_Children</table_name>
<xls_file>1010_240 FS GC Shelter for Battered Women and Children.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_LivingArrng_GrpLiving_001, GC_LivingArrng_001, GC_Separate_Case_001, GC_CG_Excluded_Individuals_001</IPAD_ID>
<PURPOSE>Determine if an individual is a resident of a shelter for battered women and children.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>B450</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number>1</condition_number>
<condition_comment>Individual notice reason blank</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>inFSGroup</condition_description>
<condition_postfix>inFSGroup
</condition_postfix>
<condition_column column_value="n" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column></condition_details>
<condition_details>
<condition_number>2</condition_number>
<condition_comment>Individual lives in public residential facility for battered women and children</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>livingArrangement = publicBatteredWomenShelter</condition_description>
<condition_postfix>livingArrangement publicBatteredWomenShelter ==
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual lives in private residential facility for battered women and children</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>livingArrangement = privateBatteredWomenShelter</condition_description>
<condition_postfix>livingArrangement privateBatteredWomenShelter ==
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column></condition_details>
<condition_details>
<condition_number>4</condition_number>
<condition_comment>Facility usually serves meals</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>institutionServesMeals</condition_description>
<condition_postfix>institutionServesMeals
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column></condition_details>
<condition_details>
<condition_number>5</condition_number>
<condition_comment>Facility is non-profit</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>institutionNonProfit</condition_description>
<condition_postfix>institutionNonProfit
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is applicant</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual is applicant</condition_description>
<condition_postfix>applicant
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Include individual in certified group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = &apos;C&apos; ;; Set cgFormed = true</action_description>
<action_postfix>/eligibilityGroupIndicator &apos;C&apos; def /cgFormed true def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="7"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as a resident of a shelter for battered women and children</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set batteredWomanSw = true</action_description>
<action_postfix>/batteredWomanSw true def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Build Certified Group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Build Certified Group</action_description>
<action_postfix>&apos;FS GC Build Certified Group&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="8"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 4</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 4</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="9"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Set_Individual_Participation_Status_Codes</table_name>
<xls_file>1010_351 FS GC Set Individual Participation Status Codes.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_TW_EDG_001</IPAD_ID>
<PURPOSE>Determine the participation codes for members in the CG, EDG or excluded from the EDG depending on whether the individual is an adult or child.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE></POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number>1</condition_number>
<condition_comment>Individual participation code is set</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>partStatusCode != null</condition_description>
<condition_postfix>partStatusCode null !=
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number>2</condition_number>
<condition_comment>Individual is in the certified group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>eligibilityGroupIndicator InCG ==
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number>3</condition_number>
<condition_comment>Individual has been excluded from the EDG</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>eligibilityGroupIndicator = Excluded</condition_description>
<condition_postfix>eligibilityGroupIndicator Excluded ==
</condition_postfix>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number>4</condition_number>
<condition_comment>Individual is a adult</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>adult</condition_description>
<condition_postfix>adult
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as a Eligible Adult</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set  partStatusCode = &apos;EA&apos;</action_description>
<action_postfix>/partStatusCode &apos;EA&apos; def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as a Eligible Child</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>set partStatusCode = &apos;EC&apos;</action_description>
<action_postfix>/partStatusCode &apos;EC&apos; def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as a ineligible Adult</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>set  partStatusCode = &apos;OA&apos;</action_description>
<action_postfix>/partStatusCode &apos;OA&apos; def
</action_postfix>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number>13</action_number>
<action_comment>Identify individual as a ineligible Child</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>set  partStatusCode = &apos;OC&apos;</action_description>
<action_postfix>/partStatusCode &apos;OC&apos; def
</action_postfix>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number>14</action_number>
<action_comment>Identify individual as a Excluded Adult</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>set partStatusCode = &apos;XA&apos;</action_description>
<action_postfix>/partStatusCode &apos;XA&apos; def
</action_postfix>
<action_column column_value="X" column_number="6"></action_column></action_details>
<action_details>
<action_number>15</action_number>
<action_comment>Identify individual as a Excluded Child</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>set partStatusCode = &apos;XC&apos;</action_description>
<action_postfix>/partStatusCode &apos;XC&apos; def
</action_postfix>
<action_column column_value="X" column_number="7"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit FS GC Setup 7</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit FS GC Setup 7</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Gather_Remaining_Household_Members</table_name>
<xls_file>1010_190 FS GC Gather Remaining Household Members.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_CG_Required_Children_001, GC_LivingArrng_001, GC_CG_Required_Adults_001, GC_CG_Excluded_Individuals_001</IPAD_ID>
<PURPOSE>Determine remaining members of the core food stamp certified group based on applicant, spouse, their children, and their grandchildren.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A210, A231, A232</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is child &lt; age 18</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>age/12.0 &lt; 18</condition_description>
<condition_postfix>age 12.0 div 18 &lt;
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is identified as ineligible student</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>noticeReason = IneligibleStudent</condition_description>
<condition_postfix>noticeReason IneligibleStudent ==
</condition_postfix>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is under non-parent parental control</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>underNonParentalControl</condition_description>
<condition_postfix>underNonParentalControl
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual has child</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>hasChild</condition_description>
<condition_postfix>hasChild
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is married</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>married</condition_description>
<condition_postfix>married
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual lives with spouse</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>livesWithSpouse</condition_description>
<condition_postfix>livesWithSpouse
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual purchases and prepares with applicant</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>purchaseAndPrepareTogether</condition_description>
<condition_postfix>purchaseAndPrepareTogether
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Include individual in certified group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>set eligibilityGroupIndicator = &apos;C&apos; ;; Set cgFormed = true</action_description>
<action_postfix>/eligibilityGroupIndicator &apos;C&apos; def /cgFormed true def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="10"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as ineligible</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>set eligibilityGroupIndicator = &apos;X&apos;</action_description>
<action_postfix>/eligibilityGroupIndicator &apos;X&apos; def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="11"></action_column></action_details>
<action_details>
<action_number>14</action_number>
<action_comment>Exclude individual from eligibility determination group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>set eligibilityGroupIndicator = &apos;X&apos;</action_description>
<action_postfix>/eligibilityGroupIndicator &apos;X&apos; def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="11"></action_column></action_details>
<action_details>
<action_number>15</action_number>
<action_comment>Set  notice reason = individual does not  purchase and prepare together</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set  noticeReason = &apos;EL0005&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0005&apos; def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="11"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Other Household Members</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Other Household Members</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="11"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Age</table_name>
<xls_file>1010_380 FS GC Age.xls</xls_file>
<attribute_fields>
<IPAD_ID>NF_Age_001</IPAD_ID>
<PURPOSE>Determine whether an individual meets age requirements for FS.</PURPOSE>
<COMMENTS>Perform for all individuals where the program type = FS.
Age has time trigger issues.</COMMENTS>
<POLICY_REFERENCE>Texas Works: TANF A221, A510, A2422, A242,  A2423 ; RCA R500, R910, R1300</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual age &lt; 22</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>age/12 &lt; 22</condition_description>
<condition_postfix>age 12 div 22 &lt;
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual age &lt; 18</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>age/12 &lt; 18</condition_description>
<condition_postfix>age 12 div 18 &lt;
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual lives with parent</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>livesWithParent</condition_description>
<condition_postfix>livesWithParent
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is under non-parent parental control</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>underParentalControl</condition_description>
<condition_postfix>underParentalControl
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as a child</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set adult = false</action_description>
<action_postfix>/adult false def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as a adult</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>set adult = true</action_description>
<action_postfix>/adult true def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit FS GC Setup</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit FS GC Setup</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Determine_Considerations_of_Alien_Sponsor</table_name>
<xls_file>1010_360 FS GC Determine Considerations of Alien Sponsor.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_TW_EDG_AlienSponsor_001</IPAD_ID>
<PURPOSE>Determine whether or not to consider an alien sponsor&apos;s or an alien sponsor&apos;s spouse&apos;s income and resources.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>B461</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is an alien</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>alienStatusCode = documentedAlien, undocumentedAlien</condition_description>
<condition_postfix>alienStatusCode documentedAlien == alienStatusCode undocumentedAlien == || 
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>individual has sponsor</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>hasSponsor</condition_description>
<condition_postfix>hasSponsor
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number>3</condition_number>
<condition_comment>Sponsor is organization or group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>sponsorIsGroup</condition_description>
<condition_postfix>sponsorIsGroup
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details>
<condition_details>
<condition_number>4</condition_number>
<condition_comment>Sponsor is in certified group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual has a person  whose edg_individual within the edg_group has sponsor = true and  eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush false individual.individual { { swap sponsor true == eligibilityGroupIndicator InCG == &amp;&amp; || swap } over individual == if } edg_group.edg_individuals foreach pop ||  dictpop dictpop } individual.relationships foreach
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Sponsor is married</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Set the_sponsor = sponsor&apos;s individual ;; Using the_sponsor Individual has a spouse</condition_description>
<condition_postfix>/the_sponsor { &apos;bogus&apos; { pop dup } sponsor if } &gt;&gt; individual dictpop dictpop def the_sponsor dictpush false { individual dictpush inverserelationship dictpush relationshipcd spouse == || dictpop dictpop } individual.relationships foreach dictpop
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number>9</action_number>
<action_comment>Identify individual as the alien sponsor</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set the_sponsor = sponsor&apos;s individual</action_description>
<action_postfix>/the_sponsor { &apos;bogus&apos; { pop dup } sponsor if } &gt;&gt; individual dictpop dictpop def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as the alien sponsor spouse</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_sponsor set the_spouse = spouse&apos;s individual</action_description>
<action_postfix>the_sponsor dictpush /the_spouse spouse &gt;&gt; individual dictpop dictpop def dictpop
</action_postfix>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number>10</action_number>
<action_comment>Consider sponsor&apos;s income</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_sponsor find individual in the edg_group and set considerIncome = true</action_description>
<action_postfix>the_sponsor dictpush individual edg_group dictpush { individual over == { individual dictpush /considerIncome true def dictpop } swap if } edg_individuals foreach pop dictpop dictpop
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Consider sponsor&apos;s resources</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_sponsor find individual in the edg_group and set considerRsc = true</action_description>
<action_postfix>the_sponsor dictpush individual edg_group dictpush { individual over == { individual dictpush /considerRsc true def dictpop } swap if } edg_individuals foreach pop dictpop dictpop
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number>12</action_number>
<action_comment>Consider sponsor&apos;s spouse&apos;s income</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_spouse find individual in the edg_group and set considerIncome = true</action_description>
<action_postfix>the_spouse dictpush individual edg_group dictpush { individual over == { individual dictpush /considerIncome true def dictpop } swap if } edg_individuals foreach pop dictpop dictpop
</action_postfix>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number>13</action_number>
<action_comment>Consider sponsor&apos;s spouse&apos;s resources</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_spouse find individual in the edg_group and set  considerRsc = true</action_description>
<action_postfix>the_spouse dictpush individual edg_group dictpush { individual over == { individual dictpush /considerRsc true def dictpop } swap if } edg_individuals foreach pop dictpop dictpop
</action_postfix>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number>14</action_number>
<action_comment>Set sponsor&apos;s Participation Status Code</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_sponsor find individual in the edg_group and set partStatusCode = alienSpnsr</action_description>
<action_postfix>the_sponsor dictpush individual edg_group dictpush { individual over == { individual dictpush /partStatusCode alienSpnsr def dictpop } swap if } edg_individuals foreach pop dictpop dictpop
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set sponsor&apos;s spouse&apos;s Participation Status Code</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_spouse find individual in the edg_group and set partStatusCode =  alienSpnsrSpouse</action_description>
<action_postfix>the_spouse dictpush individual edg_group dictpush { individual over == { individual dictpush /partStatusCode alienSpnsrSpouse def dictpop } swap if } edg_individuals foreach pop dictpop dictpop
</action_postfix>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 7</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 7</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Determine_Potential_Elderly_Disabled_Separate_Group</table_name>
<xls_file>1010_280 FS GC Determine Potential Elderly and Disabled Separate Group.xls</xls_file>
<attribute_fields>
<IPAD>GC_Separate_Case_001, GC_CG_Optional_Adults_001, GC_ElderlyDisabled_HH_001</IPAD>
<PURPOSE>Determine if the household includes an elderly incapacitated member.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A231, B431, B432, B433</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number>1</condition_number>
<condition_comment>Individual has notice reason blank</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>inFSGroup</condition_description>
<condition_postfix>inFSGroup
</condition_postfix>
<condition_column column_value="n" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number>2</condition_number>
<condition_comment>Individual is identified as potential elderly and disabled</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>fsElderlyDisabledInd = potElderlyIndv</condition_description>
<condition_postfix>fsElderlyDisabledInd potElderlyIndv ==
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual cannot purchase and prepare separately due to permanent incapacity</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>purchaseAndPrepareTogether</condition_description>
<condition_postfix>purchaseAndPrepareTogether
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual(s) requests separate food stamp group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>requestSeparateFSGroup = true</condition_description>
<condition_postfix>requestSeparateFSGroup true ==
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Exclude individual from EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>/eligibilityGroupIndicator Excluded def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = potential elderly and disabled  group, separate application required</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0014&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0014&apos; def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Form a potential elderly disabled EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Form a edg_group called pot_eld_dis ;; Add all individuals to pot_eld_dis and for each set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>/pot_eld_dis &apos;edg_group&apos; createentity def pot_eld_dis dictpush { &apos;edg_individual&apos; createentity dictpush /individual individual.individual def edg_individuals edg_individual addto dictpop } individuals foreach { individual dictpush /eligibilityGroupIndicator Excluded def dictpop } edg_individuals foreach dictpop edg_groups pot_eld_dis addto
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number>8</action_number>
<action_comment>Identify the new EDG as the elderly group EDG and set the 165% test required for the EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using pot_eld_dis Set fsTestReqSw = true ;; Using pot_eld_dis Set fsElderlyGroupSw = true</action_description>
<action_postfix>pot_eld_dis dictpush /fsTestReqSw true def dictpop pot_eld_dis dictpush /fsElderlyGroupSw true def dictpop
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number>9</action_number>
<action_comment>Add individual to the potential elderly and disabled EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Find individual in pot_eld_dis and set eligibilityGroupIndicator = InEDG</action_description>
<action_postfix>individual pot_eld_dis dictpush { individual over == { individual dictpush /eligibilityGroupIndicator InEDG def dictpop } swap if } edg_individuals foreach pop dictpop
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Add individual to the potential elderly and disabled CG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Find individual in pot_eld_dis and set eligibilityGroupIndicator = InCG ;; Find individual in pot_eld_dis and set targetSw = true</action_description>
<action_postfix>individual pot_eld_dis dictpush { individual over == { individual dictpush /eligibilityGroupIndicator InCG def dictpop } swap if } edg_individuals foreach pop dictpop individual pot_eld_dis dictpush { individual over == { individual dictpush /targetSw true def dictpop } swap if } edg_individuals foreach pop dictpop
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Identify Relationship to Potential Elderly Incapacitated</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using pot_eld_dis Perform FS GC Identify Relationship to Potential Elderly Incapacitated for each edg_individual and individual in the edg_group</action_description>
<action_postfix>pot_eld_dis dictpush { individual dictpush &apos;FS GC Identify Relationship to Potential Elderly Incapacitated&apos; performtable dictpop } edg_group.edg_individuals foreach dictpop
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 6</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 6</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Other_Household_Members</table_name>
<xls_file>1010_180 FS GC Other Household Members.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_CG_Required_Children_001, GC_LivingArrng_001, GC_CG_Required_Adults_001, GC_CG_ Excluded_Individuals_001</IPAD_ID>
<PURPOSE>Determine other required members of the food stamp certified group based on their relationship to members identified in the FS GC Build Certified Group.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A210, A231, A232</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is child of applicant&apos;s child</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual has a parent who has a parent who is the applicant</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { { individual dictpush inverserelationship dictpush { applicant || } relationshipcd parent == if dictpop dictpop } individual.relationships foreach  } relationshipcd parent == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column>
<condition_column column_value="n" column_number="15"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is child of applicant&apos;s spouse&apos;s child</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual has a parent who has a parent who has a spouse who is the applicant</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { { individual dictpush inverserelationship dictpush { { individual dictpush inverserelationship dictpush { applicant || } relationshipcd spouse == if dictpop dictpop } individual.relationships foreach  } relationshipcd parent == if dictpop dictpop } individual.relationships foreach  } relationshipcd parent == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="y" column_number="11"></condition_column>
<condition_column column_value="y" column_number="12"></condition_column>
<condition_column column_value="y" column_number="13"></condition_column>
<condition_column column_value="y" column_number="14"></condition_column>
<condition_column column_value="n" column_number="15"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Child&apos;s parent is in certified group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>individual has a parent whose edg_individual within the edg_group has  eligibilityGroupIndicator = &apos;C&apos;</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { false individual.individual { { swap eligibilityGroupIndicator &apos;C&apos; == || swap } over individual == if } edg_group.edg_individuals foreach pop || } relationshipcd parent == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Child&apos;s parent is identified as ineligible student</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>individual has a parent whose edg_individual within the edg_group has  noticeReason = &apos;IS&apos;</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { false individual.individual { { swap noticeReason &apos;IS&apos; == || swap } over individual == if } edg_group.edg_individuals foreach pop || } relationshipcd parent == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="y" column_number="11"></condition_column>
<condition_column column_value="y" column_number="12"></condition_column>
<condition_column column_value="y" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual&apos;s age is &lt; 22</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>age/12.0 &lt; 22</condition_description>
<condition_postfix>age 12.0 div 22 &lt;
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="y" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual purchases and prepares with applicant</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>purchaseAndPrepareTogether</condition_description>
<condition_postfix>purchaseAndPrepareTogether
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="y" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Include individual in certified group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = &apos;C&apos; ;; Set cgFormed = true</action_description>
<action_postfix>/eligibilityGroupIndicator &apos;C&apos; def /cgFormed true def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="11"></action_column>
<action_column column_value="X" column_number="12"></action_column></action_details>
<action_details>
<action_number>13</action_number>
<action_comment>Exclude individual from EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = &apos;X&apos;</action_description>
<action_postfix>/eligibilityGroupIndicator &apos;X&apos; def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="13"></action_column></action_details>
<action_details>
<action_number>14</action_number>
<action_comment>Set notice reason = individual ineligible, does not purchase and prepare together</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0005&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0005&apos; def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="13"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Gather Remaining Household Members</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Gather Remaining Household Members</action_description>
<action_postfix>&apos;FS GC Gather Remaining Household Members&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="14"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Build Certified Group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Build Certified Group</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="11"></action_column>
<action_column column_value="X" column_number="12"></action_column>
<action_column column_value="X" column_number="13"></action_column>
<action_column column_value="X" column_number="14"></action_column>
<action_column column_value="X" column_number="15"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Group_Living_Arrangement_Disability_Check</table_name>
<xls_file>1010_230 FS GC Group Living Arrangement Disability Check.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_Separate_Case_001, GC_LivingArrng_GrpLiving_001</IPAD_ID>
<PURPOSE>Determine if the group living arrangement resident meets the disability criteria.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>B451.1.2</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is identified as disabled</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>disabilitySw = true</condition_description>
<condition_postfix>disabilitySw true ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is applicant</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual is applicant</condition_description>
<condition_postfix>applicant
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual purchases and prepares with group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>purchaseAndPrepareTogether</condition_description>
<condition_postfix>purchaseAndPrepareTogether
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Include individual in certified group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = InCG</action_description>
<action_postfix>/eligibilityGroupIndicator InCG def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as ineligible</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>/eligibilityGroupIndicator Excluded def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = individuals do not purchase and prepare together</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0005&apos; ;; Set inFSGroup = false</action_description>
<action_postfix>/noticeReason &apos;EL0005&apos; def /inFSGroup false def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = individual not disabled</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0010&apos; ;; Set inFSGroup = false</action_description>
<action_postfix>/noticeReason &apos;EL0010&apos; def /inFSGroup false def
</action_postfix>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Group Living Arrangement</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Group Living Arrangement</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Setup</table_name>
<xls_file>1010_010 FS GC Setup.xls</xls_file>
<attribute_fields>
<IPAD_ID></IPAD_ID>
<PURPOSE>Determines the order in which the FS Group Composition tables should be performed.</PURPOSE>
<COMMENTS>** Perform for all individuals on the application.  Note: This is an example of how the flow could occur.  Assumptions:  Individuals on application are presented to these tables in the following order Applicant, other individuals on application (sorted by age descending).  All individuals are in the EDG at beginning of the tables.</COMMENTS>
<POLICY_REFERENCE></POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Perform when called</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Perform when called</condition_description>
<condition_postfix>true
</condition_postfix>
<condition_column column_value="*" column_number="1"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number>12</action_number>
<action_comment>Perform FS GC Age</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Age for all individuals in the case</action_description>
<action_postfix>{ &apos;FS GC Age&apos; performtable } case.individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>13</action_number>
<action_comment>Perform FS GC Exclude Individual Not in Group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Exclude Individual Not in Group for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Exclude Individual Not in Group&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>14</action_number>
<action_comment>Perform FS GC Determine Institutional Residence Status</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Determine Institutional Residence Status  for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Determine Institutional Residence Status&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>15</action_number>
<action_comment>Perform FS GC Disqualified Ineligible</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Disqualified Ineligible for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Disqualified Ineligible&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>16</action_number>
<action_comment>Perform FS GC Determine Disability</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Determine Disability for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Determine Disability&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>17</action_number>
<action_comment>Perform FS GC Setup 2</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Setup 2</action_description>
<action_postfix>&apos;FS GC Setup 2&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to Master Eligibility Control</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to Master Eligibility Control</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>TW_NF_Disabled_Blind</table_name>
<xls_file>2000_495 TW NF Disabled Blind.xls</xls_file>
<attribute_fields>
<IPAD_ID>NF_DisabledBlind_001</IPAD_ID>
<PURPOSE>Determine if an individual has met the definition of disabled or blind in order to be considered for special  treatment regarding income tests, medical deductions, excess shelter, and/or resource limits.</PURPOSE>
<COMMENTS>If the individual is a veteran and does not meet the definition of a disabled veteran, then test the individual as a surviving spouse of a deceased veteran or a surviving child of a deceased veteran. Perform for all individuals under 60 where program type = FS or TANF or FMA (where the FMA type of assistance is Medically Needy Medical Assistance, Medically Needy with Spend Down Medical Assistance, Medically Needy Nonimmigrant and Undocumented Alien Medical Assistance, Medically Needy with Spend Down Nonimmigrant and Undocumented Alien Medical Assistance</COMMENTS>
<POLICY_REFERENCE>Texas Works B432, 433, WR411, A1220</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual receives SSI, SSA disability or blindness payments or SSI MA only</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>benefitTypeCd = &apos;SSI&apos;, &apos;SMA&apos;, &apos;SSA&apos;, &apos;BLP&apos;</condition_description>
<condition_postfix>benefitTypeCd &apos;SSI&apos; == benefitTypeCd &apos;SMA&apos; == || benefitTypeCd &apos;SSA&apos; == || benefitTypeCd &apos;BLP&apos; == || 
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column>
<condition_column column_value="n" column_number="15"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual receives disability retirement benefits from any government agency for a disability that would have been considered permanent for Social Security purposes</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>benefitTypeCd = retirementbenefit and confSocialSecurityStdSw</condition_description>
<condition_postfix>benefitTypeCd retirementbenefit == confSocialSecurityStdSw &amp;&amp;
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column>
<condition_column column_value="n" column_number="15"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual receives Railroad Retirement and Medicare</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>benefitTypeCd = railroadretirement</condition_description>
<condition_postfix>benefitTypeCd railroadretirement ==
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column>
<condition_column column_value="n" column_number="15"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is a veteran</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>veteran</condition_description>
<condition_postfix>veteran
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column>
<condition_column column_value="n" column_number="15"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>individual is the surviving spouse of a deceased veteran</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>spouseOfDeceasedVet</condition_description>
<condition_postfix>spouseOfDeceasedVet
</condition_postfix>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="y" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column>
<condition_column column_value="n" column_number="15"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is a surviving child of a decreased veteran</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>childOfDeceasedVet</condition_description>
<condition_postfix>childOfDeceasedVet
</condition_postfix>
<condition_column column_value="y" column_number="12"></condition_column>
<condition_column column_value="y" column_number="13"></condition_column>
<condition_column column_value="y" column_number="14"></condition_column>
<condition_column column_value="n" column_number="15"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>VA has determined individual to be permanently incapable of self-support</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>incapableSelfSupport</condition_description>
<condition_postfix>incapableSelfSupport
</condition_postfix>
<condition_column column_value="y" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual has been approved for VA benefits due to Veteran&apos;s death and is considered permanently disabled for Social Security purposes</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>confSocialSecurityStdSw</condition_description>
<condition_postfix>confSocialSecurityStdSw
</condition_postfix>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="y" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual receives 100% disability service connected disability VA benefit</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>percentDisability = &apos;100&apos;</condition_description>
<condition_postfix>percentDisability &apos;100&apos; ==
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual requires regular aid and attendance</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>regAidAttendance</condition_description>
<condition_postfix>regAidAttendance
</condition_postfix>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is permanently housebound</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>permHousebound</condition_description>
<condition_postfix>permHousebound
</condition_postfix>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Set individual&apos;s disabled/blind definition to meets</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set disabilitySw = true</action_description>
<action_postfix>/disabilitySw true def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="12"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set individual&apos;s disabled/blind definition to does not meet</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set disabilitySw = false</action_description>
<action_postfix>/disabilitySw false def
</action_postfix>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="11"></action_column>
<action_column column_value="X" column_number="13"></action_column>
<action_column column_value="X" column_number="14"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to ALL NF Non-Financial Control 4, FS GC Determine Disability, FS GC Group Living Arrangement</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to ALL NF Non-Financial Control 4, FS GC Determine Disability, FS GC Group Living Arrangement</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="11"></action_column>
<action_column column_value="X" column_number="12"></action_column>
<action_column column_value="X" column_number="13"></action_column>
<action_column column_value="X" column_number="14"></action_column>
<action_column column_value="X" column_number="15"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Alien_Sponsor</table_name>
<xls_file>1010_365 FS GC Alien Sponsor.xls</xls_file>
<attribute_fields>
<IPAD_ID>NF_Alien_Sponsor_001</IPAD_ID>
<PURPOSE>Determine if the alien sponsor is included in the Food Stamp Eligibility Determination Group (EDG)</PURPOSE>
<COMMENTS>Perform for all documented aliens where category of assistance is Food Stamps.</COMMENTS>
<POLICY_REFERENCE>A1360, A1245</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is in the certified group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>eligibilityGroupIndicator InCG ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is documented alien and has a sponsor</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>alienStatusCode = documentedAlien and hasSponsor = true</condition_description>
<condition_postfix>alienStatusCode documentedAlien == hasSponsor true == &amp;&amp;
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="y" column_number="11"></condition_column>
<condition_column column_value="y" column_number="12"></condition_column>
<condition_column column_value="y" column_number="13"></condition_column>
<condition_column column_value="n" column_number="14"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Alien is a refugee, parolee, asylum grantee, or Cuban/Haitian entrant</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>alienTypeCode = &apos;RE&apos;, &apos;R2&apos;, &apos;R3&apos;, &apos;PA&apos;, &apos;AS&apos;, &apos;A2&apos;, &apos;A3&apos;, &apos;CH&apos;</condition_description>
<condition_postfix>alienTypeCode &apos;RE&apos; == alienTypeCode &apos;R2&apos; == || alienTypeCode &apos;R3&apos; == || alienTypeCode &apos;PA&apos; == || alienTypeCode &apos;AS&apos; == || alienTypeCode &apos;A2&apos; == || alienTypeCode &apos;A3&apos; == || alienTypeCode &apos;CH&apos; == || 
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Sponsor is alive</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>sponsorAlive</condition_description>
<condition_postfix>sponsorAlive
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="y" column_number="11"></condition_column>
<condition_column column_value="y" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Sponsor is organization or group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>sponsorIsGroup</condition_description>
<condition_postfix>sponsorIsGroup
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Sponsor is in the certified group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual has a person whose edg_individual within the edg_group has  sponsor = true and eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush false individual.individual { { swap sponsor true == eligibilityGroupIndicator InCG == &amp;&amp; || swap } over individual == if } edg_group.edg_individuals foreach pop ||  dictpop dictpop } individual.relationships foreach
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Sponsor receives Food Stamps in another certifed group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>sponsor&apos;s approvedForFS = true</condition_description>
<condition_postfix>{ &apos;bogus&apos; { pop dup } sponsor if } &gt;&gt; approvedForFS dictpop dictpop true ==
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="y" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number>9</action_number>
<action_comment>Identify the alien sponsor</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set the_sponsor = sponsor&apos;s individual</action_description>
<action_postfix>/the_sponsor { &apos;bogus&apos; { pop dup } sponsor if } &gt;&gt; individual dictpop dictpop def
</action_postfix>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="11"></action_column>
<action_column column_value="X" column_number="12"></action_column>
<action_column column_value="X" column_number="13"></action_column></action_details>
<action_details>
<action_number>10</action_number>
<action_comment>Perform FS GC Alien Sponsor Spouse Tax dependent Exclusion</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_sponsor Perform FS GC Alien Sponsor Spouse Tax dependent Exclusion</action_description>
<action_postfix>the_sponsor dictpush &apos;FS GC Alien Sponsor Spouse Tax dependent Exclusion&apos; performtable dictpop
</action_postfix>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="11"></action_column>
<action_column column_value="X" column_number="12"></action_column>
<action_column column_value="X" column_number="13"></action_column></action_details>
<action_details>
<action_number>11</action_number>
<action_comment>Include the sponsor in the EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_sponsor find individual in the edg_group and set eligibilityGroupIndicator = InEDG</action_description>
<action_postfix>the_sponsor dictpush individual edg_group dictpush { individual over == { individual dictpush /eligibilityGroupIndicator InEDG def dictpop } swap if } edg_individuals foreach pop dictpop dictpop
</action_postfix>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number>12</action_number>
<action_comment>Set the alien sponsor participation code</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_sponsor find individual in the edg_group and set  partStatusCode = alienSpnsr</action_description>
<action_postfix>the_sponsor dictpush individual edg_group dictpush { individual over == { individual dictpush /partStatusCode alienSpnsr def dictpop } swap if } edg_individuals foreach pop dictpop dictpop
</action_postfix>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number>13</action_number>
<action_comment>Set the alien sponsor inclusion reason</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_sponsor find individual in the edg_group and set  inclusionReason = &apos;ALS&apos;</action_description>
<action_postfix>the_sponsor dictpush individual edg_group dictpush { individual over == { individual dictpush /inclusionReason &apos;ALS&apos; def dictpop } swap if } edg_individuals foreach pop dictpop dictpop
</action_postfix>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number>14</action_number>
<action_comment>Perform FS GC Include Alien Sponsor Spouse Tax Dependents</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Using the_sponsor Perform FS GC Include Alien Sponsor Spouse Tax Dependents</action_description>
<action_postfix>the_sponsor dictpush &apos;FS GC Include Alien Sponsor Spouse Tax Dependents&apos; performtable dictpop
</action_postfix>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number>15</action_number>
<action_comment>Exit to FS GC Setup 7</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 7</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="11"></action_column>
<action_column column_value="X" column_number="12"></action_column>
<action_column column_value="X" column_number="13"></action_column>
<action_column column_value="X" column_number="14"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Group_Living_Arrangement</table_name>
<xls_file>1010_220 FS GC Group Living Arrangement.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_Separate_Case_001, GC_LivingArrng_GrpLiving_001</IPAD_ID>
<PURPOSE>Determine if the individual or individuals are residents of a group living arrangement.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>B451.1.2</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number>1</condition_number>
<condition_comment>inFSGroup</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>inFSGroup</condition_description>
<condition_postfix>inFSGroup
</condition_postfix>
<condition_column column_value="n" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="y" column_number="11"></condition_column>
<condition_column column_value="y" column_number="12"></condition_column>
<condition_column column_value="y" column_number="13"></condition_column></condition_details>
<condition_details>
<condition_number>2</condition_number>
<condition_comment>Individual resides in public group living arrangement (GLA) residential facility</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>livingArrangement = publicGLA</condition_description>
<condition_postfix>livingArrangement publicGLA ==
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual resides in private group living arrangement (GLA) residential facility</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>livingArrangement = privateGLA</condition_description>
<condition_postfix>livingArrangement privateGLA ==
</condition_postfix>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="y" column_number="11"></condition_column>
<condition_column column_value="y" column_number="12"></condition_column>
<condition_column column_value="n" column_number="13"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Facility is non-profit</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>institutionNonProfit</condition_description>
<condition_postfix>institutionNonProfit
</condition_postfix>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="y" column_number="11"></condition_column>
<condition_column column_value="n" column_number="12"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Facility is certified by state agency</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>institutionCertifiedByState</condition_description>
<condition_postfix>institutionCertifiedByState
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Facility has &lt; 17 residents</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>lessThan17Residents</condition_description>
<condition_postfix>lessThan17Residents
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is applicant</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual is applicant</condition_description>
<condition_postfix>applicant
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Applicant is in certified group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Is there a edg_individual and individual in the edg_group whose applicant = true and eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>false { individual dictpush applicant true == eligibilityGroupIndicator InCG == &amp;&amp; || dictpop } edg_group.edg_individuals foreach
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Perform TW NF Disabled Blind</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform TW NF Disabled Blind</action_description>
<action_postfix>&apos;TW NF Disabled Blind&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as ineligible</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>/eligibilityGroupIndicator Excluded def
</action_postfix>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="11"></action_column>
<action_column column_value="X" column_number="12"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = center does not meet standards</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0003&apos; ;; Set inFSGroup = false</action_description>
<action_postfix>/noticeReason &apos;EL0003&apos; def /inFSGroup false def
</action_postfix>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="11"></action_column>
<action_column column_value="X" column_number="12"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = no applicant identified</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0004&apos; ;; Set inFSGroup = false</action_description>
<action_postfix>/noticeReason &apos;EL0004&apos; def /inFSGroup false def
</action_postfix>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="9"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Group Living Arrangement Disability Check</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Group Living Arrangement Disability Check</action_description>
<action_postfix>&apos;FS GC Group Living Arrangement Disability Check&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 3</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 3</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="11"></action_column>
<action_column column_value="X" column_number="12"></action_column>
<action_column column_value="X" column_number="13"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Elderly_Disabled</table_name>
<xls_file>1010_150 FS GC Elderly and Disabled.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_CG_Optional_Adults_001, GC_ElderlyDisabled_HH_001, GC_Separate_Case_001</IPAD_ID>
<PURPOSE>Determine if the household includes a potential elderly incapacitated individual or individuals.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A231</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is disabled</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>disabilitySw = true</condition_description>
<condition_postfix>disabilitySw true ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column></condition_details>
<condition_details>
<condition_number>2</condition_number>
<condition_comment>Individual is age 60 or over</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>age/12.0 &gt;= 60</condition_description>
<condition_postfix>age 12.0 div 60 &gt;=
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as potential elderly and disabled</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set fsElderlyDisabledInd = potElderlyIndv</action_description>
<action_postfix>/fsElderlyDisabledInd potElderlyIndv def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 2</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 2</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Setup_4</table_name>
<xls_file>1010_040 FS GC Setup 4.xls</xls_file>
<attribute_fields>
<IPAD_ID></IPAD_ID>
<PURPOSE>Determines the order in which the FS GC tables are to be performed.</PURPOSE>
<COMMENTS>**  Perform for all individuals on the application with notice reasons = spaces.</COMMENTS>
<POLICY_REFERENCE></POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number>2</condition_number>
<condition_comment>Certified Group formed</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>cgFormed</condition_description>
<condition_postfix>cgFormed
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Setup 6</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Setup 6</action_description>
<action_postfix>&apos;FS GC Setup 6&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Shelter for Battered Women and Children</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Shelter for Battered Women Children  for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Shelter for Battered Women Children&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Additional Household Members</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Additional Household Members for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Additional Household Members&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Setup 5</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Setup 5</action_description>
<action_postfix>&apos;FS GC Setup 5&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup3</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup3</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Identify_Relationship_to_Potential_Elderly_Incapacitated</table_name>
<xls_file>1010_290 FS GC Identify Relationship of Potential Elderly Incapacitated.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_Separate_Case_001, GC_CG_Optional_Adults_001, GC_ElderlyDisabled_HH_001</IPAD_ID>
<PURPOSE>Identify the relationship of the individual to the potential elderly incapacitated individual.</PURPOSE>
<COMMENTS>Perform for each individual in the household until all spouses, children and individuals under parental control of all persons in the potential elderly disable EDG are found</COMMENTS>
<POLICY_REFERENCE>A231, B431, B432, B433</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number>1</condition_number>
<condition_comment>inFSGroup and noticeReason != ipvDisqualification</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>inFSGroup and noticeReason != ipvDisqualification</condition_description>
<condition_postfix>inFSGroup noticeReason ipvDisqualification != &amp;&amp;
</condition_postfix>
<condition_column column_value="n" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="y" column_number="11"></condition_column></condition_details>
<condition_details>
<condition_number>2</condition_number>
<condition_comment>eligibilityGroupIndicator = InCG</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>eligibilityGroupIndicator InCG ==
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column></condition_details>
<condition_details>
<condition_number>3</condition_number>
<condition_comment>Individual has a spouse whose edg_individual within the edg_group has eligibilityGroupIndicator = InCG</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual has a spouse whose edg_individual within the edg_group has eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { false individual.individual { { swap eligibilityGroupIndicator InCG == || swap } over individual == if } edg_group.edg_individuals foreach pop || } relationshipcd spouse == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual has a parent whose edg_individual within the edg_group has eligibilityGroupIndicator = InCG</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual has a parent whose edg_individual within the edg_group has eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { false individual.individual { { swap eligibilityGroupIndicator InCG == || swap } over individual == if } edg_group.edg_individuals foreach pop || } relationshipcd parent == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>individual has a person whose edg_individual within the edg_group has eligibilityGroupIndicator = InCG and fillsParentalRoleSw = true</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>individual has a person whose edg_individual within the edg_group has eligibilityGroupIndicator = InCG and fillsParentalRoleSw = true</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush false individual.individual { { swap eligibilityGroupIndicator InCG == fillsParentalRoleSw true == &amp;&amp; || swap } over individual == if } edg_group.edg_individuals foreach pop ||  dictpop dictpop } individual.relationships foreach
</condition_postfix>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="y" column_number="9"></condition_column>
<condition_column column_value="n" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>age/12.0 &lt; 22</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>age/12.0 &lt; 22</condition_description>
<condition_postfix>age 12.0 div 22 &lt;
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>age/12.0 &lt; 18</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>age/12.0 &lt; 18</condition_description>
<condition_postfix>age 12.0 div 18 &lt;
</condition_postfix>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>adult</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>adult</condition_description>
<condition_postfix>adult
</condition_postfix>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column>
<condition_column column_value="n" column_number="9"></condition_column>
<condition_column column_value="y" column_number="10"></condition_column>
<condition_column column_value="n" column_number="11"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number>10</action_number>
<action_comment>Exclude individual from the EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>/eligibilityGroupIndicator Excluded def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exclude potential elderly individual from all other EDGs</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Find Individual in edg_group and set eligibilityGroupIndicator = Excluded for all edg_groups</action_description>
<action_postfix>{ individual edg_group dictpush { individual over == { individual dictpush /eligibilityGroupIndicator Excluded def dictpop } swap if } edg_individuals foreach pop dictpop } edg_groups foreach
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="7"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Include individual in the EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = InEDG</action_description>
<action_postfix>/eligibilityGroupIndicator InEDG def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="11"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Include individual in the CG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = InCG</action_description>
<action_postfix>/eligibilityGroupIndicator InCG def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="7"></action_column></action_details>
<action_details>
<action_number>15</action_number>
<action_comment>Identify individual as spouse of individual identified as potential elderly and disabled</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set fsElderlyDisabledInd = spouseOfpotElderlyIndv</action_description>
<action_postfix>/fsElderlyDisabledInd spouseOfpotElderlyIndv def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number>16</action_number>
<action_comment>Identify individual as child of individual identified as potential elderly and disabled</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set fsElderlyDisabledInd = childOfpotElderlyIndv</action_description>
<action_postfix>/fsElderlyDisabledInd childOfpotElderlyIndv def
</action_postfix>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="7"></action_column></action_details>
<action_details>
<action_number>17</action_number>
<action_comment>Identify individual as Test Adult</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set partStatusCode = testAdult</action_description>
<action_postfix>/partStatusCode testAdult def
</action_postfix>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="10"></action_column></action_details>
<action_details>
<action_number>18</action_number>
<action_comment>Identify individual as Test Child</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set partStatusCode = testChild</action_description>
<action_postfix>/partStatusCode testChild def
</action_postfix>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="11"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Perform FS GC Identify Relationship to Potential Elderly Incapacitated</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Identify Relationship to Potential Elderly Incapacitated for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ individual dictpush &apos;FS GC Identify Relationship to Potential Elderly Incapacitated&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="7"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Determine Potential Elderly Incapacitated Separate Group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Determine Potential Elderly Incapacitated Separate Group</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column>
<action_column column_value="X" column_number="9"></action_column>
<action_column column_value="X" column_number="10"></action_column>
<action_column column_value="X" column_number="11"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Exclude_Conversion_Individuals</table_name>
<xls_file>1010_415 FS GC Exclude Conversion Individuals.xls</xls_file>
<attribute_fields>
<IPAD_ID></IPAD_ID>
<PURPOSE>Determine the edm from which the converion individual has to be excluded from the eligibility determination group.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE></POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number>1</condition_number>
<condition_comment>Individual is converted</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>indvConverted = true</condition_description>
<condition_postfix>indvConverted true ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number>2</condition_number>
<condition_comment>Type of assistance = Food Stamps</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>programCd = &apos;FS&apos;</condition_description>
<condition_postfix>programCd &apos;FS&apos; ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details>
<condition_details>
<condition_number>3</condition_number>
<condition_comment>Individual is converted for Texas Works</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>indvTwInd = &apos;C&apos;</condition_description>
<condition_postfix>indvTwInd &apos;C&apos; ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column></condition_details>
<condition_details>
<condition_number>4</condition_number>
<condition_comment>EDM prior to individual conversion date</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>indvFsCvDt != null and (in months edm &lt; indvFsCvDt)</condition_description>
<condition_postfix>indvFsCvDt null != setmonth edm indvFsCvDt &lt; setday  &amp;&amp;
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Exclude individual from the eligibility determination group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded;; set partStatusCode = null;; Perform FS GC Set Individual Participation Status Codes</action_description>
<action_postfix>/eligibilityGroupIndicator Excluded def /partStatusCode null def &apos;FS GC Set Individual Participation Status Codes&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = Individual not certified as edm is prior to conversion month</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0123&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0123&apos; def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Deny Group For Not Converted</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Deny Group For Not Converted</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Determine_Homeless_Household</table_name>
<xls_file>1010_270 FS GC Determine Homeless Household.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_Homeless_HH_001</IPAD_ID>
<PURPOSE>Identify homeless households.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>B454</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number>1</condition_number>
<condition_comment>Individual is in certified group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>eligibilityGroupIndicator = InCG</condition_description>
<condition_postfix>eligibilityGroupIndicator InCG ==
</condition_postfix>
<condition_column column_value="n" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual has no regular nighttime residence</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>homelessReasonCd = noRegNightTimeRes</condition_description>
<condition_postfix>homelessReasonCd noRegNightTimeRes ==
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual resides in location not intended for regular sleeping quarters</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>homelessReasonCd = notIntendedNightTimeRes</condition_description>
<condition_postfix>homelessReasonCd notIntendedNightTimeRes ==
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual resides in supervised shelter that provides temporary living quarters</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>livingArrangement = homeless</condition_description>
<condition_postfix>livingArrangement homeless ==
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual resides in temporary quarters in another person&apos;s residence</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>livingArrangement = livesWithFriend</condition_description>
<condition_postfix>livingArrangement livesWithFriend ==
</condition_postfix>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual has resided in these quarters &lt; 91 days</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>in days laEffBegDt + 91 days &gt;= edm</condition_description>
<condition_postfix>setday laEffBegDt 91 days + edm &gt;= setday 
</condition_postfix>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Identify group as homeless</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set homelessHouseholdSw = true</action_description>
<action_postfix>/homelessHouseholdSw true def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 6</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 6</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Treatment_Center</table_name>
<xls_file>1010_160 FS GC Treatment Center.xls</xls_file>
<attribute_fields>
<IPAD_ID>NF_InstitutionalStatus_001, GC_LivingArrng_GrpLiving_001, GC_CG_Excluded_Individuals_001</IPAD_ID>
<PURPOSE>Determine if the individual or individuals are residents of an alcohol or narcotic treatment center.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A232.1, B451.1</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number>1</condition_number>
<condition_comment>Individual notice reason is blank</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>inFSGroup</condition_description>
<condition_postfix>inFSGroup
</condition_postfix>
<condition_column column_value="n" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="y" column_number="8"></condition_column></condition_details>
<condition_details>
<condition_number>2</condition_number>
<condition_comment>Individual resides in alcohol/narcotic treatment center</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>livingArrangement = &apos;TC&apos;</condition_description>
<condition_postfix>livingArrangement &apos;TC&apos; ==
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual resides there regularly</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>residesThereRegularly</condition_description>
<condition_postfix>residesThereRegularly
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Treatment center is authorized to receive FS</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>institutionAuthorisedToReceiveFS</condition_description>
<condition_postfix>institutionAuthorisedToReceiveFS
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Treatment center is licensed by TCADA</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>institutionLicensedByTCADA</condition_description>
<condition_postfix>institutionLicensedByTCADA
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is the applicant</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual is applicant</condition_description>
<condition_postfix>applicant
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Include individual in certified group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = &apos;C&apos; ;; Set cgFormed = true</action_description>
<action_postfix>/eligibilityGroupIndicator &apos;C&apos; def /cgFormed true def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number>14</action_number>
<action_comment>Identify individual as ineligible</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded ;; Set inFSGroup = false</action_description>
<action_postfix>/eligibilityGroupIndicator Excluded def /inFSGroup false def
</action_postfix>
<action_column column_value="X" column_number="6"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = individual does not reside in a valid type of institution</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0002&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0002&apos; def
</action_postfix>
<action_column column_value="X" column_number="6"></action_column></action_details>
<action_details>
<action_number>16</action_number>
<action_comment>Perform FS GC Build Certified Group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Build Certified Group</action_description>
<action_postfix>&apos;FS GC Build Certified Group&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup 2</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 2</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Deny_Group_For_Voluntary_Withdrawal</table_name>
<xls_file>1010_420 FS GC Deny Group For Voluntary Withdrawal.xls</xls_file>
<attribute_fields>
<IPAD_ID></IPAD_ID>
<PURPOSE>Deny ongoing FS ongoing EDG for voluntary withdrawal.</PURPOSE>
<COMMENTS>Implemented with defect 214488</COMMENTS>
<POLICY_REFERENCE></POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Foodstamps is approved ongoing</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>programStatusCd = APPROVED</condition_description>
<condition_postfix>programStatusCd APPROVED ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Voluntary withdrawal exists</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>withdrawSw = true</condition_description>
<condition_postfix>withdrawSw true ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Eligibility Determination Month is later than the withdraw date for the program</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>edm &gt; withdrawDt</condition_description>
<condition_postfix>edm withdrawDt &gt;
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column></condition_details>
<condition_details>
<condition_number>4</condition_number>
<condition_comment>Withdraw Reason is Verbal Voluntary Withdrawal</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>withdrawReasonCd = VERBAL</condition_description>
<condition_postfix>withdrawReasonCd VERBAL ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details>
<condition_details>
<condition_number>5</condition_number>
<condition_comment>Withdraw Reason is Written Voluntary Withdrawal</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>withdrawReasonCd = WRITTEN</condition_description>
<condition_postfix>withdrawReasonCd WRITTEN ==
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details>
<condition_details>
<condition_number>6</condition_number>
<condition_comment>Withdraw Reason is No Show</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>withdrawReasonCd = NOSHOW</condition_description>
<condition_postfix>withdrawReasonCd NOSHOW ==
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = failure due to verbal voluntary withdrawal</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason =  noticeReason + NR_VERBAL_WITHDRAWAL for all the edg_individuals in the edg_group</action_description>
<action_postfix>{ /noticeReason noticeReason NR_VERBAL_WITHDRAWAL + def } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set group notice reason = failure due to verbal voluntary withdrawal</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set groupNoticeReason = NR_VERBAL_WITHDRAWAL</action_description>
<action_postfix>/groupNoticeReason NR_VERBAL_WITHDRAWAL def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column></action_details>
<action_details>
<action_number>11</action_number>
<action_comment>Set notice reason = failure due to written voluntary withdrawal</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason =  noticeReason + NR_WRITTEN_WITHDRAWAL for all the edg_individuals in the edg_group</action_description>
<action_postfix>{ /noticeReason noticeReason NR_WRITTEN_WITHDRAWAL + def } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number>12</action_number>
<action_comment>Set group notice reason = failure due to written voluntary withdrawal</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set groupNoticeReason = NR_WRITTEN_WITHDRAWAL</action_description>
<action_postfix>/groupNoticeReason NR_WRITTEN_WITHDRAWAL def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number>13</action_number>
<action_comment>Set notice reason = failure due to noshow voluntary withdrawal</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason =  noticeReason + NR_NOSHOW_WITHDRAWAL for all the edg_individuals in the edg_group</action_description>
<action_postfix>{ /noticeReason noticeReason NR_NOSHOW_WITHDRAWAL + def } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number>14</action_number>
<action_comment>Set group notice reason = failure due to nowshow voluntary withdrawal</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set groupNoticeReason = NR_NOSHOW_WITHDRAWAL</action_description>
<action_postfix>/groupNoticeReason NR_NOSHOW_WITHDRAWAL def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number>15</action_number>
<action_comment>Deny group for voluntary withdrawal</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded, set partStatusCode = NULL for all the edg_individuals in the edg_group;; Perform FS GC Set Individual Participation Status Codes for each edg_individual and individual in the edg_group</action_description>
<action_postfix>{ /eligibilityGroupIndicator Excluded def /partStatusCode NULL def } edg_group.edg_individuals foreach { individual dictpush &apos;FS GC Set Individual Participation Status Codes&apos; performtable dictpop } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column></action_details>
<action_details>
<action_number>16</action_number>
<action_comment>Exit to FS GC Setup 7</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup 7</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Eligible_College_Student</table_name>
<xls_file>1010_120 FS GC Eligible College Student.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_CG_Excluded_Individuals_001</IPAD_ID>
<PURPOSE>Determine whether the food stamp individual identified as a student meets the eligible student criteria.</PURPOSE>
<COMMENTS>* a child who depends on the student for physical care</COMMENTS>
<POLICY_REFERENCE>A232, B480</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Student is fit for employment</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>fitForEmployment</condition_description>
<condition_postfix>fitForEmployment
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Student is employed &gt; 19 hours per week</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>hoursEmployed &gt; 19</condition_description>
<condition_postfix>hoursEmployed 19 &gt;
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Student participates in work study</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>enrolledInWorkStudy</condition_description>
<condition_postfix>enrolledInWorkStudy
</condition_postfix>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Student is enrolled in JTPA, Choices, Food Stamp Employment and Training, Trade Adjustment Assistance, or other state and local training programs</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>trainingProgramCode = &apos;WI&apos;, &apos;CH&apos;, &apos;FS&apos;, &apos;TA&apos;, &apos;LT&apos;</condition_description>
<condition_postfix>trainingProgramCode &apos;WI&apos; == trainingProgramCode &apos;CH&apos; == || trainingProgramCode &apos;FS&apos; == || trainingProgramCode &apos;TA&apos; == || trainingProgramCode &apos;LT&apos; == || 
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Student participates in on the job training</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>enrolledInJobTrning</condition_description>
<condition_postfix>enrolledInJobTrning
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Student is approved for TANF</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>approvedForTANF</condition_description>
<condition_postfix>approvedForTANF
</condition_postfix>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Student is responsible for dependent child *</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>responsibleForDependentChild</condition_description>
<condition_postfix>responsibleForDependentChild
</condition_postfix>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as an ineligible student</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set partStatusCode = ineligibleStudent</action_description>
<action_postfix>/partStatusCode ineligibleStudent def
</action_postfix>
<action_column column_value="X" column_number="7"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = ineligible student</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0012&apos; ;; Set inFSGroup = false</action_description>
<action_postfix>/noticeReason &apos;EL0012&apos; def /inFSGroup false def
</action_postfix>
<action_column column_value="X" column_number="7"></action_column></action_details>
<action_details>
<action_number>14</action_number>
<action_comment>Perform FS GC Student Responsible for Dependent Child</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Perform FS GC Student Responsible for Dependent Child</action_description>
<action_postfix>&apos;FS GC Student Responsible for Dependent Child&apos; performtable
</action_postfix>
<action_column column_value="X" column_number="6"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Student Status</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Student Status</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Student_Responsible_for_Dependent_Child</table_name>
<xls_file>1010_130 FS GC Student Responsible for Dependent Child.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_CG_Excluded_Individuals_001</IPAD_ID>
<PURPOSE>Determine whether the food stamp individual identified as a student is responsible for the care of a dependent child.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A232, B480</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is only parent in household</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>onlyParentInHousehold</condition_description>
<condition_postfix>onlyParentInHousehold
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is enrolled full-time in school</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>schoolEnrollmentCode = FULLTIME</condition_description>
<condition_postfix>schoolEnrollmentCode FULLTIME ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Student eligiblity granted to child&apos;s other parent</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Does every child of  the Individual have a parent whose eligibleStudent = true</condition_description>
<condition_postfix> true { individual dictpush inverserelationship dictpush { false { individual dictpush inverserelationship dictpush { eligiblestudent true == || } relationshipcd parent == if dictpop dictpop } relationships foreach &amp;&amp; } relationshipcd child == if dictpop dictpop } relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Child is &lt; age 6</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual has a child whose age/12  &lt; 6 and partOfGroup = true</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { age 12 div 6 &lt; partOfGroup true == &amp;&amp; || } relationshipcd child == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Child is &lt; age 12</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual has a child whose age/12 &lt; 12 and partOfGroup =  true</condition_description>
<condition_postfix>false { individual dictpush inverserelationship dictpush { age 12 div 12 &lt; partOfGroup true == &amp;&amp; || } relationshipcd child == if dictpop dictpop } individual.relationships foreach 
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Child care is available</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>childCareAvailable</condition_description>
<condition_postfix>childCareAvailable
</condition_postfix>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as ineligible student</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set partStatusCode = &apos;IS&apos;</action_description>
<action_postfix>/partStatusCode &apos;IS&apos; def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="8"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = &apos;Individual does not meet student criteria&apos;</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0012&apos; ;; Set InFSGroup = false</action_description>
<action_postfix>/noticeReason &apos;EL0012&apos; def /InFSGroup false def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="8"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as eligible student</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>[dummy]</action_description>
<action_postfix> 
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="7"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Eligible College Student</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Eligible College Student</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Check_for_Drug_And_Alcohol_Group</table_name>
<xls_file>1010_410 FS GC Check for Drug And Alcohol Group.xls</xls_file>
<attribute_fields>
<IPAD_ID></IPAD_ID>
<PURPOSE>Determine if applicant resides in drug and alcohol treatment center. If so identify the group accordingly. If individual is certified on a Non - Drug &amp; alcohol type of group then current group must be failed and individual has to reapply.</PURPOSE>
<COMMENTS>This table is performed for all individuals in the certified group. If applicant is living in drug &amp; alcohol treatment center and is not previously certified on such a FS group, then identify group as FS_DA_EDG. If individual is certified on regular FS and has moved to DA treatment center, then disqualify the group and vice-versa.</COMMENTS>
<POLICY_REFERENCE>CCB</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number>1</condition_number>
<condition_comment>Individual is applicant</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>Individual is applicant</condition_description>
<condition_postfix>applicant
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number>2</condition_number>
<condition_comment>Individual is receiving food stamps</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>approvedForFS = true</condition_description>
<condition_postfix>approvedForFS true ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number>3</condition_number>
<condition_comment>Individual is certified on drug and alcohol type of FS group</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>approvedForFSDA = true</condition_description>
<condition_postfix>approvedForFSDA true ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column></condition_details>
<condition_details>
<condition_number>4</condition_number>
<condition_comment>Individual is living at drug and alcohol treatment center</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>livingArrangement = &apos;TC&apos;</condition_description>
<condition_postfix>livingArrangement &apos;TC&apos; ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Identify this group as drug and alcohol type of FS group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set fsDAEdgSw = true</action_description>
<action_postfix>/fsDAEdgSw true def
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="5"></action_column></action_details>
<action_details>
<action_number>7</action_number>
<action_comment>Set notice reason = individual does not reside in a valid type of institution</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0002&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0002&apos; def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number>8</action_number>
<action_comment>Set notice reason = no longer living at home</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0122&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0122&apos; def
</action_postfix>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number>9</action_number>
<action_comment>Exclude all individuals from the FS certified group and EDG</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilitygroupindicator= &apos;X&apos; for all edg_individuals in the edg_group</action_description>
<action_postfix>{ /eligibilitygroupindicator &apos;X&apos; def } edg_group.edg_individuals foreach
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to  FS GC Setup 7</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to  FS GC Setup 7</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Exclude_Inactive_Individuals</table_name>
<xls_file>1010_405 FS GC Exclude Inactive Individuals.xls</xls_file>
<attribute_fields>
<IPAD_ID></IPAD_ID>
<PURPOSE>Exclude individuals who are inactive in case. They may be part of the set of processed individuals to ensure that their eligibility dates are carried forward from the last authorized segment.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE></POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is active in the case household</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>activeInCaseSw = true</condition_description>
<condition_postfix>activeInCaseSw true ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number>6</action_number>
<action_comment>Exclude individual from the eligibility determination group</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded</action_description>
<action_postfix>/eligibilityGroupIndicator Excluded def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number>7</action_number>
<action_comment>Set notice reason = Individual is not active in the case</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0060&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0060&apos; def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column></action_details>
<action_details>
<action_number>8</action_number>
<action_comment>Exit  FS GC Setup 7</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit  FS GC Setup 7</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table>
<decision_table>
<table_name>FS_GC_Determine_Institutional_Residence_Status</table_name>
<xls_file>1010_090 FS GC Determine Institutional Residence Status.xls</xls_file>
<attribute_fields>
<IPAD_ID>GC_CG_Excluded_Individuals_001, GC_LivingArrng_InstStatus_001</IPAD_ID>
<PURPOSE>Determine if an individual is living in an institution.</PURPOSE>
<COMMENTS></COMMENTS>
<POLICY_REFERENCE>A232.1, B451, B453, B454</POLICY_REFERENCE></attribute_fields>
<conditions>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual is resident of institution</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>livingArrangement = &apos;TC&apos;, &apos;GL&apos;, &apos;PR&apos;, &apos;PU&apos;, &apos;BS&apos;, &apos;BW&apos;, &apos;BC&apos;, &apos;AF&apos;, &apos;NF&apos;</condition_description>
<condition_postfix>livingArrangement &apos;TC&apos; == livingArrangement &apos;GL&apos; == || livingArrangement &apos;PR&apos; == || livingArrangement &apos;PU&apos; == || livingArrangement &apos;BS&apos; == || livingArrangement &apos;BW&apos; == || livingArrangement &apos;BC&apos; == || livingArrangement &apos;AF&apos; == || livingArrangement &apos;NF&apos; == || 
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="y" column_number="7"></condition_column>
<condition_column column_value="n" column_number="8"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Individual receives &gt; 1/2 of their meals from institution</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>receiveHalfMealsFromInst</condition_description>
<condition_postfix>receiveHalfMealsFromInst
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="y" column_number="6"></condition_column>
<condition_column column_value="n" column_number="7"></condition_column></condition_details>
<condition_details>
<condition_number>3</condition_number>
<condition_comment>Institution is group living arrangement</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>institutionType = &apos;GL&apos;</condition_description>
<condition_postfix>institutionType &apos;GL&apos; ==
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="y" column_number="2"></condition_column>
<condition_column column_value="n" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number>4</condition_number>
<condition_comment>Institution is public or private residential facility</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>institutionType = &apos;PR&apos;, &apos;PU&apos;</condition_description>
<condition_postfix>institutionType &apos;PR&apos; == institutionType &apos;PU&apos; == || 
</condition_postfix>
<condition_column column_value="y" column_number="3"></condition_column>
<condition_column column_value="n" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Institution is alcohol and/or narcotic treatment center</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>institutionType = &apos;TC&apos;</condition_description>
<condition_postfix>institutionType &apos;TC&apos; ==
</condition_postfix>
<condition_column column_value="y" column_number="4"></condition_column>
<condition_column column_value="n" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number></condition_number>
<condition_comment>Institution is a shelter for battered women and children</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>institutionType = &apos;BS&apos;, &apos;BW&apos;, &apos;BC&apos;</condition_description>
<condition_postfix>institutionType &apos;BS&apos; == institutionType &apos;BW&apos; == || institutionType &apos;BC&apos; == || 
</condition_postfix>
<condition_column column_value="y" column_number="5"></condition_column>
<condition_column column_value="n" column_number="6"></condition_column></condition_details>
<condition_details>
<condition_number>7</condition_number>
<condition_comment>Facility is certified by state agency</condition_comment>
<condition_requirement></condition_requirement>
<condition_description>institutionCertifiedByState</condition_description>
<condition_postfix>institutionCertifiedByState
</condition_postfix>
<condition_column column_value="y" column_number="1"></condition_column>
<condition_column column_value="n" column_number="2"></condition_column></condition_details></conditions>
<actions>
<action_details>
<action_number></action_number>
<action_comment>Identify individual as ineligible</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set eligibilityGroupIndicator = Excluded ;;Set inFSGroup = false</action_description>
<action_postfix>/eligibilityGroupIndicator Excluded def /inFSGroup false def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="6"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Set notice reason = individual does not reside in a valid type of institution</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Set noticeReason = &apos;EL0002&apos;</action_description>
<action_postfix>/noticeReason &apos;EL0002&apos; def
</action_postfix>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="6"></action_column></action_details>
<action_details>
<action_number></action_number>
<action_comment>Exit to FS GC Setup</action_comment>
<initial_action_requirement></initial_action_requirement>
<action_description>Exit to FS GC Setup</action_description>
<action_postfix>
</action_postfix>
<action_column column_value="X" column_number="1"></action_column>
<action_column column_value="X" column_number="2"></action_column>
<action_column column_value="X" column_number="3"></action_column>
<action_column column_value="X" column_number="4"></action_column>
<action_column column_value="X" column_number="5"></action_column>
<action_column column_value="X" column_number="6"></action_column>
<action_column column_value="X" column_number="7"></action_column>
<action_column column_value="X" column_number="8"></action_column></action_details></actions>
<policy_statements></policy_statements></decision_table></decision_tables>